ascii_digits = {
    '0': [
        "_______   ",
        "\\   _  \\  ",
        "/  /_\\  \\ ",
        "\\  \\_/   \\",
        " \\_____  /",
        "       \\/ "
    ],
    '1': [
        " ____  ",
        "/_   | ",
        " |   | ",
        " |   | ",
        " |___| ",
        "       "
    ],
    '2': [
        "________  ",
        "\\_____  \\ ",
        " /  ____/ ",
        "/       \\ ",
        "\\_______ \\",
        "        \\/"
    ],
    '3': [
        "________  ",
        "\\_____  \\ ",
        "  _(__  < ",
        " /       \\",
        "/______  /",
        "       \\/ "
    ],
    '4': [
        "   _____  ",
        "  /  |  | ",
        " /   |  |_",
        "/    ^   /",
        "\\____   | ",
        "     |__| "
    ],
    '5': [
        " .________",
        " |   ____/",
        " |____  \\ ",
        " /       \\",
        "/______  /",
        "       \\/ "
    ],
    '6': [
        "  ________",
        " /  _____/",
        "/   __  \\ ",
        "\\  |__\\  \\",
        " \\_____  /",
        "       \\/ "
    ],
    '7': [
        "_________ ",
        "\\______  \\",
        "    /    /",
        "   /    / ",
        "  /____/  ",
        "          "
    ],
    '8': [
        "  ______  ",
        " /  __  \\ ",
        " >      < ",
        "/   --   \\",
        "\\______  /",
        "       \\/ "
    ],
    '9': [
        " ________ ",
        "/   __   \\",
        "\\____    /",
        "   /    / ",
        "  /____/  ",
        "          "
    ],
    '/': [
        "     /\\   ",
        "    / /   ",
        "   / /    ",
        "  / /     ",
        " / /      ",
        " \\/       "
    ],
    

    

    ' ': [
        "        ",
        "        ",
        "        ",
        "        ",
        "        ",
        "        "
    ],
    
    ':': [
        "    ",
        " /\ ",
        " \/ ",
        " /\ ",
        " \/ ",
        "    "
    ],


        '': [
        "",
        "",
        "",
        "",
        "",
        ""
    ],
    '(': [
    "    ___ ",
    "   /  / ",
    "  /  /  ",
    " (  (   ",
    "  \\  \\  ",
    "   \\__\\ ",
],

    '-': [
    "         ",
    "         ",
    "  ______ ",
    " /_____/ ",
    "         ",
    "         ",
],

')': [
    " ___    ",
    " \\  \\   ",
    "  \\  \\  ",
    "   )  ) ",
    "  /  /  ",
    " /__/   ",
],


    'a': [
    "        ",
    "_____   ",
    "\\__  \\  ",
    " / __ \\_",
    "(____  /",
    "     \\/ ",
],

    
    'b': [
    " ___.    ",
    " \\_ |__  ",
    "  | __ \\ ",
    "  | \\_\\ \\",
    "  |___  /",
    "      \\/ "
    ],

    'c': [
    "        ",
    "  ____  ",
    "_/ ___\\ ",
    "\\  \\___ ",
    " \\___  >",
    "     \\/ ",
],

'd': [
    "    .___",
    "  __| _/",
    " / __ | ",
    "/ /_/ | ",
    "\\____ | ",
    "     \\/ ",
],

'e': [
    "        ",
    "  ____  ",
    "_/ __ \\ ",
    "\\  ___/ ",
    " \\___  >",
    "     \\/ ",
],
'f': [
    "  _____ ",
    "_/ ____\\",
    "\\   __\\ ",
    " |  |   ",
    " |__|   ",
    "        ",
],
'g': [
    "         ",
    "   ____  ",
    "  / ___\\ ",
    " / /_/  >",
    " \\___  / ",
    "/_____/  ",
],
'h': [
    ".__     ",
    "|  |__  ",
    "|  |  \\ ",
    "|   Y  \\",
    "|___|  /",
    "     \\/ ",
],
'i': [
    " __   ",
    "|__|  ",
    "|  |  ",
    "|  |  ",
    "|__|  ",
    "      ",
],
'j': [
    "     __ ",
    "    |__| ",
    "    |  | ",
    "    |  | ",
    "/\\__|  |",
    "\\______|",
],
'k': [
    " __    ",
    "|  | __",
    "|  |/ /",
    "|    < ",
    "|__|_ \\",
    "     \\/",
],
'l': [
    ".__    ",
    "|  |   ",
    "|  |   ",
    "|  |__ ",
    "|____/ ",
    "       ",
],
'm': [
    "         ",
    "  _____  ",
    " /     \\ ",
    "|  Y Y  \\",
    "|__|_|  /",
    "      \\/ ",
],
'n': [
    "        ",
    "  ____  ",
    " /    \\ ",
    "|   |  \\",
    "|___|  /",
    "     \\/ ",
],
'o': [
    "        ",
    "  ____  ",
    " /  _ \\ ",
    "(  <_> )",
    " \\____/ ",
    "        ",
],
'p': [
    "        ",
    "______  ",
    "\\____ \\ ",
    "|  |_> >",
    "|   __/ ",
    "|__|    ",
],
'q': [
    "        ",
    "  ______",
    " / ____/",
    "< <_|  |",
    " \\__   |",
    "    |__|",
],
'r': [
    "        ",
    "_______ ",
    "\\_  __ \\",
    " |  | \\/",
    " |__|   ",
    "        ",
],
's': [
    "        ",
    "  ______",
    " /  ___/",
    " \\___ \\ ",
    "/____  >",
    "     \\/ ",
],
't': [
    "  __   ",
    "_/  |_ ",
    "\\   __\\",
    " |  |  ",
    " |__|  ",
    "       ",
],
'u': [
    "       ",
    " __ __ ",
    "|  |  \\",
    "|  |  /",
    "|____/ ",
    "       ",
],
'v': [
    "       ",
    "___  __",
    "\\  \\/ /",
    " \\   / ",
    "  \\_/  ",
    "       ",
],
'w': [
    "         ",
    "__  _  __",
    "\\ \\/ \\/ /",
    " \\     / ",
    "  \\/\\_/  ",
    "         ",
],
'x': [
    "        ",
    "___  ___",
    "\\  \\/  /",
    " >    < ",
    "/__/\_ \\",
    "      \\/",
],
'y': [
    "        ",
    " ___.__. ",
    "<   |  | ",
    " \\___  | ",
    " / ____| ",
    " \\/      ",
],
'z': [
    "        ",
    "________",
    "\\___   /",
    " /    / ",
    "/_____ \\",
    "      \\/",
],








}


def print_ascii_number(number,type):
    if type == "player":
        number_str = str(number)
        indent = " " * 50
        rows = [indent]* 6
    else:
        number_str = str(number)
        indent = " " * 400
        rows = [indent]* 6



    for digit in number_str:
        digit_ascii = ascii_digits.get(digit)
        for i in range(6):
            rows[i] += digit_ascii[i] + " "

    for row in rows:
        print(row)